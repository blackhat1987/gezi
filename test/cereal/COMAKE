#edit-mode: -*- python -*-
#coding:gbk

#工作路径. 如果高版本gcc 需要修改两个路径 设置好TOOLCHAIN_ROOT
WORKROOT('../../../../../../../')
RELATIVE_PATH='../../'

#是否使用本地的gcc 比如本地安装了gcc 4.8.2使用本地的可以直接使用生成的bin文件 如./main
GCC_LOCAL=1
print 'GCC_LOCAL: %d'%GCC_LOCAL 
#是否使用高版本gcc 可以直接使用生成的bin文件 如./main 
GCC_HIGH=1
print 'GCC_HIGH: %d'%GCC_HIGH
#是否使用高版本动态链接库，即是否使用高版本libc 如果启用 可以使用openmp 但是需要设置LD_LIBRARY_PATH sh ./run.sh ./main
GCC_DYNAMIC=1
print 'GCC_DYNAMIC: %d'%GCC_DYNAMIC
GCC_VERSION='3.4.5'
if  GCC_HIGH == 1: 
	if GCC_DYNAMIC == 1:
		GCC_VERSION='4.8.1'
	else:
		GCC_VERSION='4.8.2'
print 'GCC_VERSION: %s'%GCC_VERSION
GLIBC_VERSION='2.9'
BINUTILS_VERSION='2.20'
KERNAL_VERSION='2.6.32'

#使用硬链接copy.
CopyUsingHardLink(True)

GCC_BIN='g++'
GCC_FLAGS = '' 

if GCC_LOCAL == 1:
	GCC_BIN = 'g++'
print 'GCC_BIN: %s'%GCC_BIN; os.system('%s -v'%GCC_BIN)
CC(GCC_BIN)
CXX(GCC_BIN)

#C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"1.9.8.7\\\"')

#编译参数设置
COMMON_FLAGS = '-g -O0 -pipe -W -Wall -fPIC -DHAVE_NETINET_IN_H -Wno-unused-parameter'

if GCC_HIGH  == 1:
	GCC_FLAGS += '-std=c++0x -fpermissive -Wno-write-strings -Wno-literal-suffix -Wno-unused-local-typedefs'
	if GCC_DYNAMIC  == 1:
		GCC_FLAGS += ' -fopenmp'
		
#C编译参数.
CFLAGS(COMMON_FLAGS, GCC_FLAGS)

#C++编译参数.
CXXFLAGS(COMMON_FLAGS, GCC_FLAGS)

#IDL编译参数
IDLFLAGS('--compack')

#UBRPC编译参数
UBRPCFLAGS('--compack')

#链接参数.
LDFLAGS('-lpthread -lrt -ldl -lldap -lcurl -rdynamic')

#依赖模块
ImportConfigsFrom('../')

#头文件路径.
INCPATHS('. ./include ./utils ./output ./output/include ./include/feature ./include/model ./include/numeric'.replace('./',RELATIVE_PATH))
headers=''
#使用库
#LIBS('/home/users/chenghuige/rsc/app/search/sep/anti-spam/gezi/lib/openldap-2.4.39/lib/lib/libldap.a')

#可执行文件
#静态库
#StaticLibrary('gezi',Sources(srcs),HeaderFiles(headers))
#共享库
#子目录
#Directory('demo')
#Application('test_redis_client',Sources('test_redis_client.cc'))
srcs = ''
Application('test_cereal',Sources('test_cereal.cc', srcs))
#Application('test_eigen',Sources('test_eigen.cc',srcs, ENV.CppFlags()+CppFlags('-O3 -DNDEBUG')))
Application('test_eigen',Sources('test_eigen.cc',srcs))
